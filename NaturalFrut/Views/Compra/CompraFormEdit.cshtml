@model NaturalFrut.Models.Compra
@{
    ViewBag.Title = "Editar Compra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2>Editar Compra</h2>

<form id="compraform">

    <div class="row">

        <!--Agrupamos campos de la columna izquierda-->
        <div class="col-sm-6">

            <div class="form-group">
                <label>N° Compra</label>
                <input id="numerocompra" name="numerocompra" required type="text" value="@Model.NumeroCompra" class="form-control" disabled />
            </div>

            <div class="form-group">
                <label>Fecha</label>
                <input id="fecha" name="fecha" required type="datetime" value="@Model.Fecha" class="form-control" />
            </div>
            

            <div class="form-group">
                <label>Clasificación</label>
                <input id="clasificacion" name="clasificacion" type="text" value="@Model.Clasificacion.Nombre" data-clasificacion-id="@Model.ClasificacionID" class="form-control" disabled />
            </div>

            <div class="form-group">
                <label>Factura</label>
                <input id="factura" name="factura" required type="text" value="@Model.Factura" class="form-control" disabled/>
            </div>

            <div class="form-group">
                <label>Tipo Factura</label>
                <input id="tipofactura" name="tipofactura" required type="text" value="@Model.TipoFactura" class="form-control" disabled/>
            </div>

            <div class="form-group">
                <label>Local</label>
                <input id="local" name="local" required type="text" value="@Model.Local" class="form-control" disabled />
            </div>



            <div class="form-group">
                <label>Suma Total</label>
                <input id="sumatotal" name="sumatotal" required type="text" value="@Model.SumaTotal" onkeyup="ValidarPunto(this);" class="form-control js-formatvalue" />
            </div>

            <div class="form-group">
                <label>Descuento %</label>
                <input id="descuentoporc" name="descuentoporc"  type="text" value="@Model.DescuentoPorc" onkeyup="ValidarPunto(this);" class="form-control" />
            </div>

            <div class="form-group">
                <label>Descuento</label>
                <input id="descuentoC" name="descuentoC"  type="text" value="@Model.Descuento" onkeyup="ValidarPunto(this);" class="form-control js-formatvalue" disabled />
            </div>

            <div class="form-group">
                <label>Subtotal</label>
                <input id="subtotal" name="subtotal" required type="text" value="@Model.Subtotal" onkeyup="ValidarPunto(this);" class="form-control js-formatvalue" disabled />
            </div>

            <div class="form-group">
                <label>Importe no Gravado</label>
                <input id="impnogravado" name="impnogravado" required type="text" value="@Model.ImporteNoGravado" class="form-control js-formatvalue" onkeyup="ValidarPunto(this);" />
            </div>

            <div class="form-group">
                <label>Entrega Efectivo</label>
                <input id="entregaEfectivo" required name="entregaEfectivo" type="text" value="0" class="form-control" onkeyup="ValidarPunto(this);" />
            </div>

            <div class="form-group">
                <label>Saldo Actual</label>
                <input id="debe" name="debe" type="text" value="@Model.Proveedor.Debe" class="form-control js-formatvalue" disabled />
            </div>

            @*<div class="form-group">
                <label>Saldo Anterior</label>
                <input id="debe" name="debe" type="text" value="@Model.Proveedor.Debe" class="form-control js-formatvalue" disabled />
              </!-div>*@



            <div class="form-group">
                <label>Saldo a Favor</label>
                <input id="saldoFavor" name="saldoFavor" type="text" value="@Model.Proveedor.SaldoAfavor" class="form-control js-formatvalue" disabled />
            </div>

            <input type="hidden" name="gastoTotalInicial"  id="gastoTotalInicial" value=""/>

        </div>

        <!--Agrupamos campos de la columna derecha-->
        <div class="col-sm-6">
            <div class="form-group">
                <label>Proveedor</label>
                <div class="tt-container compra-proveedor">
                    <input id="proveedor" name="proveedor" data-msg-required="Por favor ingresa un Proveedor" data-proveedor-id="@Model.ProveedorID" required type="text" value="@Model.Proveedor.Nombre" class="form-control" disabled />
                </div>
            </div>
            

            <div class="form-group">
                <label>IVA</label>
                <input id="iva" name="iva" type="number" value="@Model.Iva" onkeyup="ValidarPunto(this);" class="form-control" />
            </div>

            <div class="form-group">
                <label>Importe IVA</label>
                <input id="importeiva" name="importeiva" type="text" value="@Model.ImporteIva" onkeyup="ValidarPunto(this);" class="form-control js-formatvalue" disabled />
            </div>

            <div class="form-group">
                <label>IIBB BsAs</label>
                <input id="iibbbsas" name="iibbbsas" type="text" value="@Model.Iibbbsas" onkeyup="ValidarPunto(this);" class="form-control" />
            </div>

            <div class="form-group">
                <label>Importe IIBB BsAs</label>
                <input id="importeiibbbsas" name="importeiibbbsas" type="text" value="@Model.ImporteIibbbsas" onkeyup="ValidarPunto(this);" class="form-control js-formatvalue" disabled />
            </div>

            <div class="form-group">
                <label>IIBB Caba</label>
                <input id="iibbcaba" name="iibbcaba" type="text" value="@Model.Iibbcaba" onkeyup="ValidarPunto(this);" class="form-control" />
            </div>

            <div class="form-group">
                <label>Importe IIBB Caba</label>
                <input id="importeiibbcaba" name="importeiibbcaba" type="text" value="@Model.ImporteIibbcaba" onkeyup="ValidarPunto(this);" class="form-control js-formatvalue" disabled />
            </div>

            <div class="form-group">
                <label>Percep. IVA</label>
                <input id="percepiva" name="percepiva" type="text" value="@Model.PercIva" onkeyup="ValidarPunto(this);" class="form-control" />
            </div>

            <div class="form-group">
                <label>Importe Percep. IVA</label>
                <input id="importepercepiva" name="importepercepiva" type="text" value="@Model.ImportePercIva" onkeyup="ValidarPunto(this);" class="form-control js-formatvalue" disabled />
            </div>

            <div class="form-group">
                <label>Total</label>
                <input id="total" name="total" type="text" value="@Model.Total" class="form-control js-formatvalue" onkeyup="ValidarPunto(this);" disabled />
            </div>


            <div class="checkbox">

                @{
                    if (Model.NoConcretado)
                    {
                        <input id="noconcretado" name="noconcretado" type="checkbox" value="" checked />
                    }
                    else
                    {
                        <input id="noconcretado" name="noconcretado" type="checkbox" value="" />
                    }
                }
                <label><strong>Concretado</strong></label>

            </div>



        </div>

    </div>

    <div class="row">
        <div class="col-sm-12">
            <h3>Productos</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">

            <table class="table-bordered table-hover table order-list">
                <thead>
                    <tr>
                        <th width="18%">Descripción</th>
                        <th width="6%">Cant.</th>
                        <th width="10%">Unidad</th>
                        <th>Importe</th>
                        <th width="6%">Desc.</th>
                        <th>Importe c/desc.</th>
                        <th width="6%">IIBB BSAS %</th>
                        <th width="6%">IIBB CABA %</th>
                        <th width="6%">IVA</th>
                        <th>Precio Uni.</th>
                        <th>Total</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody class="listaproductos">
                    @{ int counter = 0;}
                    @foreach (var producto in Model.ProductosXCompra)
                    {
                        <tr>
                            <td><div class="tt-container"><input id="@String.Format("producto{0}", counter)" name="producto" data-msg-required="Por favor ingresa un Producto" data-producto-id="@producto.ProductoID" required type="text" data-js-counter="@counter" value="@producto.Producto.Nombre" onChange="ValidarTipoDeProducto(@counter); " class="form-control"  /></div></td>
                            <td><div class="form-group"><input id="@String.Format("cantidad{0}", counter)" name="cantidad" data-msg-required="Por favor ingresa una Cantidad" required type="number" value="@producto.Cantidad" class="js-cantidad form-control" data-js-counter="@counter" /></div></td>
                            <td><div class="form-group"><select id="@String.Format("tiposdeunidad{0}", counter)" name="tiposdeunidad" data-msg-required="Por favor ingresa una Unidad" class="form-control" onblur="ValidarTipoDeProducto(@counter);" required><option value="@producto.TipoDeUnidadID" selected>@producto.TipoDeUnidad.Nombre</option></select></div></td>
                            <td><div class="form-group"><input id="@String.Format("importe{0}", counter)" name="importe" type="text" data-js-counter="@counter" value="@producto.Importe" class="js-importe form-control js-formatvalue" onkeyup="ValidarPunto(this);" /></div></td>         
                            <td><div class="form-group"><input id="@String.Format("descprod{0}", counter)" name="descprod" type="text" data-js-counter="@counter" value="@producto.Descuento" class="js-descprod form-control" onkeyup="ValidarPunto(this);"/></div></td>
                            <td><div class="form-group"><input id="@String.Format("importecondesc{0}", counter)" name="importecondesc" type="text" data-js-counter="@counter" value="@producto.ImporteDescuento" class="form-control js-formatvalue"  disabled onkeyup="ValidarPunto(this);"/></div></td>
                            <td><div class="form-group"><input id="@String.Format("iibbbsas{0}", counter)" name="iibbbsas" type="text" data-js-counter="@counter" value="@producto.Iibbbsas" class="js-iibbbsas form-control" onkeyup="ValidarPunto(this);"/></div></td>
                            <td><div class="form-group"><input id="@String.Format("iibbcaba{0}", counter)" name="iibbcaba" type="text" data-js-counter="@counter" value="@producto.Iibbcaba" class="js-iibbcaba form-control" onkeyup="ValidarPunto(this);" /></div></td>
                            <td><div class="form-group"><input id="@String.Format("iva{0}", counter)" name="iva" type="text" data-js-counter="@counter" value="@producto.Iva" class="js-iva form-control" onkeyup="ValidarPunto(this);"/></div></td>
                            <td><div class="form-group"><input id="@String.Format("preciouni{0}", counter)" name="preciouni" type="text" data-js-counter="@counter" value="@producto.PrecioUnitario" class="form-control js-formatvalue"  disabled/></div></td>
                            <td><div class="form-group"><input id="@String.Format("total{0}", counter)" name="total" type="text" data-js-counter="@counter" value="@producto.Total" class="total form-control js-formatvalue" disabled /></div></td>

                            <td>
                                <input type="button" class="ibtnDel btn btn-md btn-danger " id="@counter" name="@counter" value="Borrar">
                                <input type="hidden" name="prodxcompraid" value="@producto.ID" />
                            </td>
                        </tr>
                        counter++;
                    }

                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="12" style="text-align: left;">
                            <input type="button" class="btn btn-lg btn-block " id="addrow" value="Agregar Producto" />
                        </td>
                    </tr>
                    <tr>
                        <td colspan="12" style="text-align: right;">
                            &nbsp;
                            <label>Total Gastos:</label>
                            <input type="text" class="form-control vtamay-totalventa" id="totalgastos" name="totalgastos" value="0" disabled/>
                        </td>
                    </tr>
                </tfoot>
            </table>

        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">

            @Html.AntiForgeryToken()
            @*<input type="hidden" id="CounterAnterior" />*@
            <button id="btnsubmit" type="submit" class="btn btn-primary" onclick="ValidarTipoDeUnidad();">Actualizar Compra</button>
            <button id="btncancelar" type="button" class="btn btn-danger" value="Cancelar" onclick="location.href='@Url.Action("Index", "Home")';">Cancelar</button>

        </div>
    </div>


</form>








@section scripts
{

    @Scripts.Render("~/bundles/jqueryval")


    <script>

        $(document).ready(function () {

            $("input[name='producto']").each(function () {

                var input = $(this);
                var cont = input.attr("data-js-counter");
                typeahead_initialize(cont);

            });
            //ViewModel para pasar al webAPI
            var vm = {
                fecha: "",
                proveedorID: 0,
                clasificacionID: 0,
                numeroCompra: 0,
                factura: 0,
                iva: 0,
                importeIva: 0,
                sumaTotal: 0,
                descuentoPorc: 0,
                descuento: 0,
                importeIibbBsas: 0,
                iibbBsas: 0,
                importeIibbCaba: 0,
                iibbCaba: 0,
                subtotal: 0,
                importePercIva: 0,
                percIva: 0,
                importeNoGravado: 0,
                total: 0,
                totalGastos: 0,
                noConcretado: false,
                tipoFactura:"",
                local:"",
                Debe: 0,
                SaldoAfavor:0,
                productosXCompra : []
            };

            var vm2 = [];

            var totalInicial = 0;
            var debeInicial = DeFormatearValor($("#debe").val());
            var saldoFavorInicial = DeFormatearValor($("#saldoFavor").val());

           
            
            CargarValoresInicialesEnVM(vm);
            ValidarCompraConcretada();
	        FormatearValoresIniciales();
	        RecalcularTotalGastos();


	        if(DeFormatearValor($("#totalgastos").val()) != 0){
	            totalInicial = DeFormatearValor($("#totalgastos").val());
	        }else{
	            totalInicial = DeFormatearValor($("#total").val());
	        }
	         
	        //$("#gastoTotalInicial").val(gastoTotalInicial);



            //**EVENTOS START **//

            //$("#proveedor").validate({
            //    rules: {
            //        proveedor: "required",
            //    },
            //    messages: {
            //        proveedor: "Por favor ingrese un Proveedor",
            //    },

            //});

            var counter = @counter;
            $("#addrow").on("click", function () {
                //RecalcularTotalGastos();
                //var validarProveedor = $("#proveedor").valid();

               // if (validarProveedor) {

                 var newRow = $("<tr>");
                    var cols = "";

                    cols += '<td><div class="tt-container"><input id="producto' + counter + '" name="producto" data-msg-required="Por favor ingresa un Producto" data-producto-id="" required type="text" value="" onChange="ValidarTipoDeProducto(' + counter + '); " class="form-control" /></div></td>';

                    cols += '<td><div class="form-group"><input id="cantidad' + counter + '" name="cantidad" data-msg-required="Por favor ingresa una Cantidad" required type="number" value="" class="js-cantidad form-control" data-js-counter="' + counter + '" ></label></div></td>';

                    cols += '<td><div class="form-group"><select id="tiposdeunidad' + counter + '" name="tiposdeunidad" data-msg-required="Por favor ingresa una Unidad" class="form-control" required ><option value="-1" ></option></select></div></td>';
                //GetTiposDeUnidadDynamic(counter);

                cols += '<td><div class="form-group"><input id="importe' + counter + '" name="importe" required type="text" data-js-counter="' + counter + '" value="" class="js-importe form-control" onkeyup="ValidarPunto(this);" /></div></td>';

                cols += '<td><div class="form-group"><input id="descprod' + counter + '" name="descprod" type="text" data-js-counter="' + counter + '" value="" class="js-descprod form-control" onkeyup="ValidarPunto(this);"  /></div></td>';

                    cols += '<td><div class="form-group"><input id="importecondesc' + counter + '" name="importecondesc" type="text" value="" class="form-control" disabled /></div></td>';

                    cols += '<td><div class="form-group"><input id="iibbbsas' + counter + '" name="iibbbsas" type="text" data-js-counter="' + counter + '" value="" class="js-iibbbsas form-control" onkeyup="ValidarPunto(this);" /></div></td>';

                    cols += '<td><div class="form-group"><input id="iibbcaba' + counter + '" name="iibbcaba" type="text" data-js-counter="' + counter + '" value="" class="js-iibbcaba form-control" onkeyup="ValidarPunto(this);" /></div></td>';

                    cols += '<td><div class="form-group"><input id="iva' + counter + '" name="iva" type="text" data-js-counter="' + counter + '" value="" class="js-iva form-control" onkeyup="ValidarPunto(this);" /></div></td>';

                    cols += '<td><div class="form-group"><input id="preciouni' + counter + '" name="preciouni" required type="text" value="" class="form-control" disabled /></div></td>';

                    cols += '<td><div class="form-group"><input id="total' + counter + '" name="total" required type="text" data-js-counter="' + counter + '" value=""  class="total form-control"  disabled /></div></td>';

                    cols += '<td><input type="button" class="ibtnDel btn btn-md btn-danger " id= "' + counter + '" name= "' + counter + '"  value="Borrar"></td>';
                    newRow.append(cols);
                    $("table.order-list").append(newRow);

                    typeahead_initialize(counter);
                    FormatearValoresRow(counter);

                    counter++;

                    $("#producto" + counter).validate({
                        rules: {
                            producto: "required",
                        },
                        messages: {
                            producto: "Por favor ingresa un Producto",
                        },

                    });

                    $("#cantidad" + counter).validate({
                        rules: {
                            cantidad: "required",
                        },
                        messages: {
                            cantidad: "Por favor ingresa una Cantidad",
                        },

                    });

                    $("#tiposdeunidad" + counter).validate({
                        rules: {
                            tiposdeunidad: "required",
                        },
                        messages: {
                            tiposdeunidad: "Por favor ingresa una Unidad",
                        },

                    });

               // }

            });

            $("table.order-list").on("click", ".ibtnDel", function (event) {

                var button = $(this);
                var productoID = $("#producto" + parseInt(button.context.id)).attr("data-producto-id");
                var totalProducto = DeFormatearValor($("#total" + parseInt(button.context.id)).val());
                var compraID = @ViewBag.CompraID;
                var cantidad = $("#cantidad" + parseInt(button.context.id)).val();
                var tipoDeUnidadID = $("#tiposdeunidad" + parseInt(button.context.id)).val();
                var valor = parseInt(this.attributes.name.value);

                var model = {
                    "productoID": productoID,
                    "totalProducto" : totalProducto,
                    "compraID": compraID,
                    "cantidad":cantidad,
                    "tipoDeUnidadID":tipoDeUnidadID
                };

                bootbox.confirm("¿Estas seguro de querer borrar el producto?", function (result) {


                    if (result) {                       

                            //Borramos la fila con datos
                            $.ajax({
                                url: "/api/compra/",
                                method: "DELETE",
                                data: model,
                                success: function () {

                                    toastr.success("Producto eliminado satisfactoriamente de la venta");

                                    button.closest("tr").remove();
                                    
                                    valor += 1;

                                    if (valor == counter) {
                                        counter -= 1;
                                    } else {
                                        counter += 1;
                                    }


                                    typeahead_initialize(counter);

                                    RecalcularTotalGastos();

                                 /*   var totalFinal = 0;
                                    var totalGasto = DeFormatearValor($("#totalgastos").val());
                                    var total = DeFormatearValor($("#total").val());

                                    if (totalGasto != 0) {
                                        totalFinal  = totalGasto;
                                    } else {
                                        totalFinal  = total;
                                    }

                                    if(debeInicial != 0 || saldoFavorInicial != 0){
                                        if(totalInicial != totalFinal ){
                                            recalculoDebe(totalInicial);
                                        }
                                    }*/

                                   // location.reload();
                                },
                                error: function () {
                                    toastr.success("Producto eliminado satisfactoriamente de la venta");

                                    button.closest("tr").remove();
                                    
                                    valor += 1;

                                    if (valor == counter) {
                                        counter -= 1;
                                    } else {
                                        counter += 1;
                                    }


                                    typeahead_initialize(counter);

                                    RecalcularTotalGastos();

                                    location.reload();
                                    //toastr.error("Error al borrar el producto, consulte con el administrator");
                                }
                            });

                            RecalcularTotalGastos();
                        }

                });
               
            });

            $("#clasificacion").on('change', function () {
                vm.clasificacionID = this.value;
            })



          /*  $("#totalgastos").on('change', function () {
                recalculoDebe();
            })*/

            
            $("#descuentoporc").on('blur', function (){

                var descuentoporc = ValorANumero($("#descuentoporc").val());

                var sumatotal = DeFormatearValor($("#sumatotal").val());

                if (descuentoporc != "") {

                    //var descuento = cantidad * importe;

                    var importeConDesc = sumatotal - ((sumatotal * descuentoporc) / 100);
                    var desc = ((sumatotal * descuentoporc) / 100);
                    $("#subtotal").val(FormatearValor(importeConDesc));
                    $("#descuentoC").val(FormatearValor(desc));

                } else {
                    $("#descuentoC").val("");
                    $("#subtotal").val(FormatearValor(sumatotal));
                }
                RecalcularTotal();
            });

            $("#noconcretado").on('change', function () {
                if (this.checked) {
                    vm.noConcretado = true;
                }
                else {
                    vm.noConcretado = false;

                    $('input[name*="cantidad"]').prop("disabled", false);
                    $('input[name*="importe"]').prop("disabled", false);
                    $('input[name*="descprod"]').prop("disabled", false);
                    $('input[name*="importecondesc"]').prop("disabled", false);
                    $('input[name*="iibbbsas"]').prop("disabled", false);
                    $('input[name*="iibbcaba"]').prop("disabled", false);
                    $('input[name*="iva"]').prop("disabled", false);
                    $('input[class*="ibtnDel"]').prop("disabled", false);
                    $("#sumatotal").prop("disabled", false);
                    $("#descuentoporc").prop("disabled", false);
                    $("#impnogravado").prop("disabled", false);
                    $("#entregaEfectivo").prop("disabled", false);
                    $("#iva").prop("disabled", false);
                    $("#iibbbsas").prop("disabled", false);
                    $("#iibbcaba").prop("disabled", false);
                    $("#percepiva").prop("disabled", false);
                    $("#importeiva").prop("disabled", true);
                    $("#importeiibbbsas").prop("disabled", true);
                    $("#importeiibbcaba").prop("disabled", true);
                    $("#importepercepiva").prop("disabled", true);
                }


            })

            $("#sumatotal").on('blur', function () {

                var descuentoporc =  DeFormatearValor($("#descuentoporc").val());

                var sumatotal = DeFormatearValor($("#sumatotal").val());

                if (descuentoporc != "") {

                    //var descuento = cantidad * importe;

                    var importeConDesc = sumatotal - ((sumatotal * descuentoporc) / 100);
                    var desc = ((sumatotal * descuentoporc) / 100);
                    $("#subtotal").val(FormatearValor(importeConDesc));
                    $("#descuentoC").val(FormatearValor(desc));

                } else {
                    $("#subtotal").val(FormatearValor(sumatotal));
                }
                $(this).val(FormatearValor(sumatotal));

                //calculo importes de iva si son distinto de vacio
                var iva =  ValorANumero($("#iva").val());
                var subtotal = DeFormatearValor($("#subtotal").val());

                if (iva != "") {

                    var importeiva = ((subtotal * iva) / 100);
                    $("#importeiva").val(FormatearValor(importeiva));

                }
                var iibbbsas =  DeFormatearValor($("#iibbbsas").val());
                var subtotal = DeFormatearValor($("#subtotal").val());

                if (iibbbsas != "") {

                    var importeiibbbsas = ((subtotal * iibbbsas) / 100);
                    $("#importeiibbbsas").val(FormatearValor(importeiibbbsas));

                }
				
				
                var iibbcaba =  DeFormatearValor($("#iibbcaba").val());
                var subtotal = DeFormatearValor($("#subtotal").val());

                if (iibbcaba != "") {

                    var importeiibbcaba = ((subtotal * iibbcaba) / 100);
                    $("#importeiibbcaba").val(FormatearValor(importeiibbcaba));

                }
				
                var percepiva =  DeFormatearValor($("#percepiva").val());
                var subtotal = DeFormatearValor($("#subtotal").val());

                if (percepiva != "") {

                    var importepercepiva = ((subtotal * percepiva) / 100);
                    $("#importepercepiva").val(FormatearValor(importepercepiva));

                }



                RecalcularTotal();
            });

	    $("#impnogravado").on('blur', function () {

                $(this).val(DeFormatearValor($(this).val()));
                $(this).val(FormatearValor($(this).val()));

                RecalcularTotal();
            });
            $("#iva").on('blur', function () {

                var iva =  ValorANumero($("#iva").val());
                var subtotal = DeFormatearValor($("#subtotal").val());

                if (iva != "") {

                    var importeiva = ((subtotal * iva) / 100);
                    $("#importeiva").val(FormatearValor(importeiva));

                } else {

                    $("#importeiva").val("");

                }

                RecalcularTotal();
            });

            $("#iibbbsas").on('blur', function () {

                var iibbbsas =  DeFormatearValor($("#iibbbsas").val());
                var subtotal = DeFormatearValor($("#subtotal").val());

                if (iibbbsas != "") {

                    var importeiibbbsas = ((subtotal * iibbbsas) / 100);
                    $("#importeiibbbsas").val(FormatearValor(importeiibbbsas));

                } else {

                    $("#importeiibbbsas").val("");

                }

                RecalcularTotal();
            });

            $("#iibbcaba").on('blur', function () {

                var iibbcaba =  DeFormatearValor($("#iibbcaba").val());
                var subtotal = DeFormatearValor($("#subtotal").val());

                if (iibbcaba != "") {

                    var importeiibbcaba = ((subtotal * iibbcaba) / 100);
                    $("#importeiibbcaba").val(FormatearValor(importeiibbcaba));

                } else {

                    $("#importeiibbcaba").val("");

                }

                RecalcularTotal();
            });

            $("#percepiva").on('blur', function () {

                var percepiva =  DeFormatearValor($("#percepiva").val());
                var subtotal = DeFormatearValor($("#subtotal").val());

                if (percepiva != "") {

                    var importepercepiva = ((subtotal * percepiva) / 100);
                    $("#importepercepiva").val(FormatearValor(importepercepiva));

                } else {

                    $("#importepercepiva").val("");

                }

                RecalcularTotal();
            });

            $(document).on('blur', "input.js-importe", function () {

                var input = $(this);
                var importe = DeFormatearValor(input[0].value);
                var counter = input.attr("data-js-counter");
                var descuento = $("#descprod" + counter).val();

                if (descuento != "") {
                    var importeConDesc = importe - ((importe * descuento) / 100);
                    $("#importecondesc" + counter).val(FormatearValor(importeConDesc));
                }
                else {
                    $("#importecondesc" + counter).val("");
                }


                RecalcularPrecioUyTotal(counter);
                RecalcularTotalGastos();


            });

            $(document).on('blur', "input.js-descprod", function () {

                var input = $(this);
                var descuento = ValorANumero(input[0].value);
                var counter = input.attr("data-js-counter");
                var importe = DeFormatearValor($("#importe" + counter).val());

                if (descuento != "") {
                    var importeConDesc = importe - ((importe * descuento) / 100);
                    $("#importecondesc" + counter).val(FormatearValor(importeConDesc));
                }
                else {
                    $("#importecondesc" + counter).val("");
                }

                RecalcularPrecioUyTotal(counter);
                RecalcularTotalGastos();


            });


            $(document).on('blur', "input.js-iibbbsas", function () {
                var input = $(this);
                var counter = input.attr("data-js-counter");
                RecalcularPrecioUyTotal(counter);
                RecalcularTotalGastos();
            });

            $(document).on('blur', "input.js-iibbcaba", function () {
                var input = $(this);
                var counter = input.attr("data-js-counter");
                RecalcularPrecioUyTotal(counter);
                RecalcularTotalGastos();
            });

            $(document).on('blur', "input.js-iva ", function () {
                var input = $(this);
                var counter = input.attr("data-js-counter");
                RecalcularPrecioUyTotal(counter);
                RecalcularTotalGastos();
            });

            $(document).on('blur', "input.js-cantidad ", function () {
                var input = $(this);
                var counter = input.attr("data-js-counter");
                RecalcularPrecioUyTotal(counter);
                RecalcularTotalGastos();
            });



            //**EVENTOS END **//

            // Autocomplete para Proveedores
            var proveedores = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Nombre'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: {
                    url: '/api/proveedores?query=%QUERY',
                    wildcard: '%QUERY',
                    cache: false
                }
            });

            $('#proveedor').typeahead({
                minLength: 1,
                highlight: true,
                hint: true,
                limit: Infinity
            }, {
                    name: 'proveedor',
                    display: 'Nombre',
                    source: proveedores
                }).on("typeahead:select", function (e, proveedor) {

                    $("#proveedor").attr("data-proveedor-id", proveedor.ID);
                    vm.proveedorID = proveedor.ID;

                });


            var validator = $("#compraform").validate({

                submitHandler: function () {

                    //var validarProducto = $('input[name*="producto"]').valid();
                    //var validarCantidad = $('input[name*="cantidad"]').valid();
                    //var validartipodeUnidad = $('select[name*="tiposdeunidad"]').valid();

                    //if (validarProducto && validarCantidad && validartipodeUnidad) {
                    

                        //Modal para aceptacion de venta
                    bootbox.confirm("Estas seguro que deseas concretar la venta?", function (result) {                        

                            if (result) {
                                
                                
                                
                                var totalFinal = 0;
                                var totalGasto = DeFormatearValor($("#totalgastos").val());
                                var total = DeFormatearValor($("#total").val());

                                if (totalGasto != 0) {
                                    totalFinal  = totalGasto;
                                } else {
                                    totalFinal  = total;
                                }

                                if(debeInicial != 0 || saldoFavorInicial != 0){
                                    if(totalInicial != totalFinal ){
                                        recalculoDebe(totalInicial);
                                    }
                                }
                               
                                calculoDebe();

                                CargarProductosAlVM(vm);                                

                                $.ajax({
                                    url: "/api/compra",
                                    method: "put",
                                    data: vm
                                })
                                    .done(function () {

                                        toastr.success("La compra se ha actualizado correctamente.");

                                        setTimeout(function () {
                                            window.location.href = "/Compra";
                                        }, 4000);

                                    })
                                    .fail(function () {
                                        toastr.error("Se ha producido un error al guardar la compra, revise los datos a ingresar...");
                                        //Reseteamos los productos del viewmodel
                                        vm.productosXCompra = [];
                                        $("#debe").val(FormatearValor(debeInicial));
                                        $("#saldoFavor").val(FormatearValor(saldoFavorInicial));
                                    });

                            }

                        });

                    //}

                    return false;
                }
            });

        });

    </script>

    <!-- FUNCIONES -->
    <script>

        function typeahead_initialize(counter) {


            //Inicializacion necesaria para typeahead dinamicos
            //var clienteID = $("#cliente").attr("data-cliente-id");

            var productos = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Nombre'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: {
                    url: 'api/productos/Productos',
                    cache: false
                }
            });

            $('#producto' + counter).typeahead({
                minLength: 1,
                highlight: true,
                hint: true,
                limit: Infinity
            }, {
                    name: 'producto',
                    display: 'Nombre',
                    source: productos
                }).on("typeahead:select", function (e, producto) {

                    $("#producto" + counter).attr("data-producto-id", producto.ID);


                });

        }

       /* function GetSaldoCliente() {

            var clienteID = $("#cliente").attr("data-cliente-id");

            if (clienteID != "") {
                $.getJSON("GetSaldoClienteAsync", { ClienteID: clienteID }, ActualizarSaldoCliente)
                    .error(function (xhr, textStatus, exceptionThrown) {
                        bootbox.alert(xhr.responseText);
                    })
            }

        }

        ActualizarSaldoProveedor = function (data) {

            if (data.Saldo != 0) {

                $("#debe").val(data.Saldo);

                $("#debe").val(FormatearValor($("#debe").val()));

                



            }

            if (data.SaldoAfavor != 0) {

                $("#saldoFavor").val(data.SaldoAfavor);

                $("#saldoFavor").val(FormatearValor($("#saldoFavor").val()));



            }
          
        }*/



        function RecalcularTotal() {

            var total = 0;
            var impuesto = 0;

            subtotal = DeFormatearValor($("#subtotal").val());

            var importeiva = DeFormatearValor($("#importeiva").val());

            if (importeiva != "")
                impuesto += parseFloat(importeiva);

            var importeiibbbsas = DeFormatearValor($("#importeiibbbsas").val());

            if (importeiibbbsas != "")
                impuesto += parseFloat(importeiibbbsas);

            var importeiibbcaba = DeFormatearValor($("#importeiibbcaba").val());

            if (importeiibbcaba != "")
                impuesto += parseFloat(importeiibbcaba);

            var importeperciva = DeFormatearValor($("#importepercepiva").val());

            if (importeperciva != "")
                impuesto += parseFloat(importeperciva);

            var impnogravado = DeFormatearValor($("#impnogravado").val());

            if (impnogravado != "")
                impuesto += parseFloat(impnogravado);


            total = parseFloat(subtotal) + parseFloat(impuesto);



            $("#total").val(FormatearValor(total));
        }



        function RecalcularPrecioUyTotal(counter) {

            var impuestos = 0;
            var precioUnitario = 0;
            var total = 0;
            var importe = DeFormatearValor($("#importe" + counter).val());
            var cantidad = $("#cantidad" + counter).val();
            var importeConDesc = DeFormatearValor($("#importecondesc" + counter).val());
            var iibbbsas = $("#iibbbsas" + counter).val();
            var iibbcaba = $("#iibbcaba" + counter).val();
            var iva = $("#iva" + counter).val();

            if(iibbbsas != ""){
                impuestos += parseFloat(iibbbsas);
            }

            if( iibbcaba != ""){
                impuestos += parseFloat(iibbcaba);
            }

            if(iva != ""){
                impuestos += parseFloat(iva);
            }

            if (importeConDesc != "") {

                precioUnitario = parseFloat(importeConDesc) + impuestos;
                total = precioUnitario * parseFloat(cantidad);

            } else {
                precioUnitario = parseFloat(importe) + impuestos;
                total = precioUnitario * parseFloat(cantidad);
            }

            $("#importecondesc" + counter).val(FormatearValor(importeConDesc));
            $("#importe" + counter).val(FormatearValor(importe));
            $("#preciouni" + counter).val(FormatearValor(precioUnitario));
            $("#total" + counter).val(FormatearValor(total));

        }

        function ValidarCompraConcretada() {

            var userRole = '@(User.IsInRole("Administrator") ? "true" : "false")';

            if ($("#noconcretado").prop('checked')) {

                //Venta Concretada, grisamos todos los campos del formulario, excepto Concretado si el user es Admin
                $("#compraform :input").prop("disabled", true);

                $("#btnsubmit").prop("disabled", false);
                $("#btncancelar").prop("disabled", false);

                if (userRole == "true")
                    $("#noconcretado").prop("disabled", false);

            }

        }

        function RecalcularTotalGastos() {

                var sumaGastoTotal = 0;

                $(".total").each(function () {
                    sumaGastoTotal += parseFloat(DeFormatearValor(this.value));
                });

                $("#totalgastos").val(FormatearValor(sumaGastoTotal)).trigger( "change" );





        }

        function GetTiposDeUnidadDynamic(counter) {

            $.getJSON("/Compra/GetTiposDeUnidadDynamicAsync", { Counter: counter }, PopulateTiposDeUnidadDynamic)
                .error(function (request, textStatus, errorThrown) { alert(errorThrown); })

        }

        PopulateTiposDeUnidadDynamic = function (data) {

            $.each(data.TiposDeUnidad, function () {
                $("#tiposdeunidad" + data.Counter).append($("<option />").val(this.ID).text(this.Nombre));
            });

            //Si el Descuento Final esta activado, desactivarlo
            var selDescFinal = $("#tipoDescuento").val();
            if (selDescFinal != "") {
                $("#descuento").attr("disabled", "disabled");
                $("#descuento").val("");
                $('#tipoDescuento option:first').prop('selected', true);
            }


        }


        function CargarValoresInicialesEnVM(vm) {

            var numeroCompra = $("#numerocompra").val();
            

            vm.numeroCompra = numeroCompra;
            
        }

        function CargarProductosAlVM(vm) {


            //Cargamos la lista de productos
            $(".listaproductos tr").each(function (i, row) {

                var $row = $(row),
                    $producto = $row.find('input[name*="producto"]'),
                    $cantidad = $row.find('input[name*="cantidad"]'),
                    $tipodeunidad = $row.find('select[name*="tiposdeunidad"]'),
                    $importe = $row.find('input[name*="importe"]'),
                    $descuento = $row.find('input[name*="descprod"]'),
                    $importecondesc = $row.find('input[name*="importecondesc"]'),
                    $iibbbsas = $row.find('input[name*="iibbbsas"]'),
                    $iibbcaba = $row.find('input[name*="iibbcaba"]'),
                    $iva = $row.find('input[name*="iva"]'),
                    $preciouni = $row.find('input[name*="preciouni"]'),
                    $total = $row.find('input[name*="total"]'),
                    $prodxcompraid = $row.find('input[name*="prodxcompraid"]');




                var productoid = $producto.attr("data-producto-id");
                var cantidad = $cantidad.val();
                var importe = DeFormatearValor($importe.val());
                var tipodeunidad = $tipodeunidad.val();
                var descuento = ValorANumero($descuento.val());
                var importecondesc = DeFormatearValor($importecondesc.val());
                var iibbbsas = ValorANumero($iibbbsas.val());
                var iibbcaba = ValorANumero($iibbcaba.val());
                var iva = ValorANumero($iva.val());
                var preciouni = DeFormatearValor($preciouni.val());
                var total = DeFormatearValor($total.val());
                var prodxcompraid = $prodxcompraid.val();               

                vm.productosXCompra.push(
                    {
                        ID: prodxcompraid,
                        CompraID: @ViewBag.CompraID,
                        ProductoID: productoid,
                        Cantidad: cantidad,
                        Importe: importe,
                        TipoDeUnidadID: tipodeunidad,
                        Descuento: descuento,
                        ImporteDescuento: importecondesc,
                        Iibbbsas: iibbbsas,
                        Iibbcaba: iibbcaba,
                        Iva: iva,
                        PrecioUnitario: preciouni,
                        Total: total
                    }
                );

            });

            @*//Cargamos la suma total y el descuento total
           // vm.descuento = $("#descuento").val();
            // vm.saldo = $("#saldo").val();

            //productos nuevos

            $(".productosnuevos").each(function (i, row) {

                var $row = $(row),
                   $producto = $row.find('input[name*="producto"]'),
                   $cantidad = $row.find('input[name*="cantidad"]'),
                   $tipodeunidad = $row.find('select[name*="tiposdeunidad"]'),
                   $importe = $row.find('input[name*="importe"]'),
                   $descuento = $row.find('input[name*="descprod"]'),
                   $importecondesc = $row.find('input[name*="importecondesc"]'),
                   $iibbbsas = $row.find('input[name*="iibbbsas"]'),
                   $iibbcaba = $row.find('input[name*="iibbcaba"]'),
                   $iva = $row.find('input[name*="iva"]'),
                   $preciouni = $row.find('input[name*="preciouni"]'),
                   $total = $row.find('input[name*="total"]')




                var productoid = $producto.attr("data-producto-id");
                var cantidad = $cantidad.val();
                var importe = DeFormatearValor($importe.val());
                var tipodeunidad = $tipodeunidad.val();
                var descuento =  ValorANumero($descuento.val());
                var importecondesc = DeFormatearValor($importecondesc.val());
                var iibbbsas =  ValorANumero($iibbbsas.val());
                var iibbcaba =  ValorANumero($iibbcaba.val());
                var iva =  ValorANumero($iva.val());
                var preciouni = DeFormatearValor($preciouni.val());
                var total = DeFormatearValor($total.val());

                vm2.push(
                    {
                        CompraID: @ViewBag.CompraID,
                        ProductoID: productoid,
                        Cantidad: cantidad,
                        Importe: importe,
                        TipoDeUnidadID: tipodeunidad,
                        Descuento: descuento,
                        ImporteDescuento: importecondesc,
                        Iibbbsas: iibbbsas,
                        Iibbcaba: iibbcaba,
                        Iva: iva,
                        PrecioUnitario: preciouni,
                        Total: total
                    }
                );


            });*@

            //cargamos resto de los campos
            vm.ID = @ViewBag.CompraID;
            vm.proveedorID = $("#proveedor").attr("data-proveedor-id");
            vm.clasificacionID = $("#clasificacion").attr("data-clasificacion-id");
            vm.factura = $("#factura").val();
            vm.tipoFactura = $("#tipofactura").val();
            vm.local = $("#local").val();
            vm.sumaTotal = DeFormatearValor($("#sumatotal").val());
            vm.descuentoPorc = ValorANumero($("#descuentoporc").val());
            vm.descuento = DeFormatearValor($("#descuentoC").val());
            vm.subtotal = DeFormatearValor($("#subtotal").val());
            vm.importeNoGravado = DeFormatearValor($("#impnogravado").val());
            vm.iva = ValorANumero($("#iva").val());
            vm.importeIva = DeFormatearValor($("#importeiva").val());
            vm.iibbBsas = ValorANumero($("#iibbbsas").val());
            vm.importeIibbBsas = DeFormatearValor($("#importeiibbbsas").val());
            vm.iibbCaba = ValorANumero($("#iibbcaba").val());
            vm.importeIibbCaba = DeFormatearValor($("#importeiibbcaba").val());
            vm.percIva = ValorANumero($("#percepiva").val());
            vm.importePercIva = DeFormatearValor($("#importepercepiva").val());
            vm.total = DeFormatearValor($("#total").val());
            vm.totalGastos = DeFormatearValor($("#totalgastos").val());
            vm.Debe = DeFormatearValor($("#debe").val());
            vm.SaldoAfavor = DeFormatearValor($("#saldoFavor").val());
            var fecha = $("#fecha").val();
            vm.fecha = fecha;

        }

        function ValidarTipoDeProducto(counter) {

            var productoID = $("#producto" + counter).attr("data-producto-id");

            if (productoID > 0) {
                $.getJSON("/Compra/ValidarTipoDeProductoAsync", { ProductoID : productoID, Counter: counter }, PopulateTipoDeUnidadSegunProducto)
                    .error(function (xhr, textStatus, exceptionThrown) {
                        bootbox.alert(xhr.responseText);
                    })
            }

        }

        PopulateTipoDeUnidadSegunProducto = function (data) {

            $("#tiposdeunidad" + data.Counter).empty();
            $("#tiposdeunidad" + data.Counter).append($("<option />").val("-1").text("Seleccione..."));
            GetTiposDeUnidadDynamic(data.Counter);
        }

        function ValidarPunto(textbox) {

            var word = ["."];

            for (i = 0; i < word.length; i++) {
                if (textbox.value.indexOf(word[i]) >= 0) {
                    $("#" + textbox.id).val($("#" + textbox.id).val().replace(".", ","));
                }
            }


        }

        function calculoDebe() {

            var aPagar = 0;
            var nuevoValor = 0;
            var entregaEfectivo = DeFormatearValor($("#entregaEfectivo").val());
            var debe = DeFormatearValor($("#debe").val());
            var totalGasto = DeFormatearValor($("#totalgastos").val());
            var saldoFavor = DeFormatearValor($("#saldoFavor").val());
            var total = DeFormatearValor($("#total").val());

            if (totalGasto != 0) {
                aPagar = totalGasto;
            } else {
                aPagar = total;
            }
       
           if (debe == 0 && saldoFavor == 0) {

                nuevoValor = aPagar - entregaEfectivo;

                if (nuevoValor < 0) {

                    nuevoValor = nuevoValor * (-1);
                    $("#debe").val(FormatearValor(0));
                    $("#saldoFavor").val(FormatearValor(nuevoValor));

                } else if (nuevoValor > 0) {

                    $("#debe").val(FormatearValor(nuevoValor));
                    $("#saldoFavor").val(FormatearValor(0));
                } else {

                    $("#debe").val(FormatearValor(0));
                    $("#saldoFavor").val(FormatearValor(0));
                }
            }

           if (debe == 0 && saldoFavor != 0) {

               // nuevoValor = saldoFavor + entregaEfectivo;

                nuevoValor = entregaEfectivo - saldoFavor;

                if (nuevoValor < 0) {

                    nuevoValor = nuevoValor * (-1);
                    $("#debe").val(FormatearValor(0));
                    $("#saldoFavor").val(FormatearValor(nuevoValor));

                } else if (nuevoValor > 0) {

                    $("#debe").val(FormatearValor(nuevoValor));
                    $("#saldoFavor").val(FormatearValor(0));
                } else {

                    $("#debe").val(FormatearValor(0));
                    $("#saldoFavor").val(FormatearValor(0));
                }
            }

            if (debe != 0 && saldoFavor == 0) {

               // nuevoValor = aPagar + debe;

                nuevoValor = entregaEfectivo - debe;

                if (nuevoValor < 0) {

                    nuevoValor = nuevoValor * (-1);
                    $("#debe").val(FormatearValor(nuevoValor));
                    $("#saldoFavor").val(FormatearValor(0));

                } else if (nuevoValor > 0) {

                    $("#debe").val(FormatearValor(0));
                    $("#saldoFavor").val(FormatearValor(nuevoValor));
                } else {

                    $("#debe").val(FormatearValor(0));
                    $("#saldoFavor").val(FormatearValor(0));
                }
            }



        }

        function recalculoDebe(totalInicial) {

            var totalFinal = 0;           
            var difTotal = 0;
            var totalGasto = DeFormatearValor($("#totalgastos").val());
            var total = DeFormatearValor($("#total").val());
            var saldoFavor = DeFormatearValor($("#saldoFavor").val());
            var debe = DeFormatearValor($("#debe").val());
            

            if (totalGasto != 0) {
                totalFinal  = totalGasto;
            } else {
                totalFinal  = total;
            }

            if (debe != 0 && saldoFavor == 0) {

                difTotal = totalInicial - totalFinal;

                if (difTotal < 0) {

                    difTotal = difTotal * (-1);
                    debe = debe + difTotal;
                    $("#debe").val(FormatearValor(debe));

                }else{
                    debe = debe - difTotal;
                    $("#debe").val(FormatearValor(debe));
                }
                
            }


            if (debe == 0 && saldoFavor != 0) {

                difTotal = totalInicial - totalFinal;

                if (difTotal < 0) {

                    difTotal = difTotal * (-1);
                    difTotal = saldoFavor - difTotal;

                    if (difTotal < 0 ){
                        difTotal = difTotal * (-1);

                        $("#debe").val(FormatearValor(difTotal));
                        $("#saldoFavor").val(FormatearValor(0));

                    }else{
                        $("#saldoFavor").val(FormatearValor(difTotal));
                    }
                }else{
                    difTotal = saldoFavor + difTotal;
                    $("#saldoFavor").val(FormatearValor(difTotal));
                }
                    
                
            }    

        }

        function FormatearValoresIniciales() {

            var totalGastoInicial =

            $(".js-formatvalue").each(function () {

                $(this).val(DeFormatearValor($(this).val()));
                $(this).val(FormatearValor($(this).val()));

            });

        }

        function FormatearValoresRow(counter) {

            $("#importe" + counter).val( FormatearValor($("#importe" + counter).val()));
            $("#importecondesc" + counter).val(FormatearValor($("#importecondesc" + counter).val()));
            $("#preciouni" + counter).val(FormatearValor($("#preciouni" + counter).val()));
            $("#total" + counter).val(FormatearValor($("#total" + counter).val()));

        }

        function ValidarTipoDeUnidad() {

            $(".listaproductos tr").each(function (i, row) {

                var $row = $(row),
                    $tipodeunidad = $row.find('select[name*="tiposdeunidad"]');

                if ($tipodeunidad.val() == -1) {
                    bootbox.alert("Por favor completar los campos de Tipo de Unidad");
                    event.preventDefault();
                }

            });
            
        }

    </script>

}
