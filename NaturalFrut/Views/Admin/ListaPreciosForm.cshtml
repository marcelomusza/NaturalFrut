@model NaturalFrut.App_BLL.ViewModels.ListaPreciosViewModel
@{
    ViewBag.Title = "Lista de Precios - Formulario de Ingreso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Titulo</h2>

<h4>Complete los campos del formulario para dar de alta productos en sus respectivas listas de precios</h4>
<br />

@using (Html.BeginForm("GuardarListaPrecios", "Admin"))
{

    <div class="row">
        @Html.ValidationSummary(true, "Por favor revise los siguientes errores:")
    </div>
    
    <div class="row">

        <!--Agrupamos campos de la columna izquierda-->
        <div class="col-sm-6">

            @*<div class="form-group">
                @Html.LabelFor(c => c.ListaId)
                @Html.DropDownListFor(c => c.ListaId, new SelectList(Model.Lista, "Id", "Nombre"), "Seleccione una Lista", new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.ListaId)
            </div>*@

            <div class="form-group">
                @Html.LabelFor(c => c.ProductoId)
                @Html.DropDownListFor(c => c.ProductoId, new SelectList(Model.Producto, "Id", "Nombre"), "Seleccione un Producto", new { @class = "form-control", @data_val_remote = "El valor ya existe en la base de datos, por favor ingrese otro para continuar..." })
                @Html.ValidationMessageFor(c => c.ProductoId)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.PrecioXKG)
                @Html.TextBoxFor(c => c.PrecioXKG, new { @class = "form-control", onkeyup = "ValidarPunto(this); ValidarSoloNumeroYComa(this);" })
                @Html.ValidationMessageFor(c => c.PrecioXKG)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.PrecioXBultoCerrado)
                @Html.TextBoxFor(c => c.PrecioXBultoCerrado, new { @class = "form-control", onkeyup = "ValidarPunto(this); ValidarSoloNumeroYComa(this);"})
                @Html.ValidationMessageFor(c => c.PrecioXBultoCerrado)
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.PrecioXUnidad)
                @Html.TextBoxFor(c => c.PrecioXUnidad, new { @class = "form-control", onkeyup = "ValidarPunto(this); ValidarSoloNumeroYComa(this);" })
                @Html.ValidationMessageFor(c => c.PrecioXUnidad)
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.KGBultoCerrado)
                @Html.TextBoxFor(c => c.KGBultoCerrado, new { @class = "form-control", onkeyup = "ValidarPunto(this); ValidarSoloNumeroYComa(this);" })
                @Html.ValidationMessageFor(c => c.KGBultoCerrado)
            </div>

        </div>

    </div>
    
    <div class="row">
        <div class="col-sm-12">

            @Html.AntiForgeryToken()
            @Html.HiddenFor(c => c.ID)
            @Html.HiddenFor(c => c.ListaId)
            <button type="submit" class="btn btn-primary">Guardar</button>
            <button type="button" class="btn btn-danger" value="Cancelar" onclick="location.href='@Url.Action("ListaPrecios", "Admin")';">Cancelar</button>          

        </div>
    </div>

    

    


    
}

@section scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function () {

            //$("#PrecioXUnidad").on("keyup", function () {

            //    //$(this).val(FormatearValor($(this).val()));
            //    //$(this).val(ValidarPuntoPorComa($(this)));

            //});

            //$("#PrecioXKG").on("blur", function () {

            //    //$(this).val(FormatearValor($(this).val()));

            //});

            //$("#PrecioXBultoCerrado").on("blur", function () {

            //    //$(this).val(FormatearValor($(this).val()));

            //});

        });
        

    </script>

}