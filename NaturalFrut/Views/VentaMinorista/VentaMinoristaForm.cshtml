@model NaturalFrut.App_BLL.ViewModels.VentaMinoristaViewModel
@{
    ViewBag.Title = "Cargar Venta Minorista - NaturalFrut";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2>Ingresar Venta</h2>

@using (Html.BeginForm("GuardarVentaMinorista", "VentaMinorista", FormMethod.Post, new { id = "vtaminform" }))
{

    <div class="row">
        @Html.ValidationSummary(true, "Por favor revise los siguientes errores:")
    </div>

    <div class="row">

        <!--Agrupamos campos de la columna izquierda-->
        <div class="col-sm-6">

            <div class="form-group">
                @Html.LabelFor(c => c.NumeroVenta)
                @Html.TextBoxFor(c => c.NumeroVenta, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(c => c.NumeroVenta)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.Fecha)
                @Html.TextBoxFor(c => c.Fecha, new { id = "Fecha", @class = "form-control", @Value = ViewBag.Fecha.ToString("dd/MM/yyyy HH:mm"), @readonly = "readonly" })
                @Html.ValidationMessageFor(c => c.Fecha)
            </div>

            @*<div class="form-group">
            @Html.LabelFor(c => c.Local)
            @Html.TextBoxFor(c => c.Local, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.Local)
        </div>*@

            <div class="form-group">
                @Html.LabelFor(c => c.Local)
                @Html.DropDownListFor(c => c.Local, new SelectList(ViewBag.Locales), "Seleccione Local", new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.Local)
            </div>

            @*<div class="form-group">
            @Html.LabelFor(c => c.Iva)
            @Html.TextBoxFor(c => c.Iva, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.Iva)
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(c => c.ImporteVentaTotal)
            @Html.EditorFor(c => c.ImporteVentaTotal, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);"} })
            @Html.ValidationMessageFor(c => c.ImporteVentaTotal)
        </div>*@

            <div class="form-group">
                @Html.LabelFor(c => c.ImporteInformeZ)
                @Html.EditorFor(c => c.ImporteInformeZ, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);" } })
                @Html.ValidationMessageFor(c => c.ImporteInformeZ)
            </div>

            @*<div class="form-group">
            @Html.LabelFor(c => c.CantidadPersonas)
            @Html.TextBoxFor(c => c.CantidadPersonas, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.CantidadPersonas)
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(c => c.Promedio)
            @Html.EditorFor(c => c.Promedio, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);" } })
            @Html.ValidationMessageFor(c => c.Promedio)
        </div>*@

            <div class="form-group">
                @Html.LabelFor(c => c.ImporteIva)
                @Html.EditorFor(c => c.ImporteIva, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);", @readonly = "readonly" } })
                @Html.ValidationMessageFor(c => c.ImporteIva)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.RazonSocial)
                @Html.TextBoxFor(c => c.RazonSocial, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.RazonSocial)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TipoFactura)
                @Html.DropDownListFor(c => c.TipoFactura, new List<SelectListItem>
        {
        new SelectListItem{Text="A", Value="A"},
        new SelectListItem{Text="B", Value="B"}
        }, "Elegir tipo factura", new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.TipoFactura)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.NumFactura)
                @Html.TextBoxFor(c => c.NumFactura, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.NumFactura)
            </div>


        </div>


        <!--Agrupamos campos de la columna derecha-->
        <div class="col-sm-6">

            <div class="form-group">
                @Html.LabelFor(c => c.PrimerNumeroTicket)
                @Html.TextBoxFor(c => c.PrimerNumeroTicket, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.PrimerNumeroTicket)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.UltimoNumeroTicket)
                @Html.TextBoxFor(c => c.UltimoNumeroTicket, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.UltimoNumeroTicket)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaVisa)
                @Html.EditorFor(c => c.TarjetaVisa, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);" } })
                @Html.ValidationMessageFor(c => c.TarjetaVisa)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaVisaDeb)
                @Html.EditorFor(c => c.TarjetaVisaDeb, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);" } })
                @Html.ValidationMessageFor(c => c.TarjetaVisaDeb)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaMaster)
                @Html.EditorFor(c => c.TarjetaMaster, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);" } })
                @Html.ValidationMessageFor(c => c.TarjetaMaster)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaMaestro)
                @Html.EditorFor(c => c.TarjetaMaestro, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);" } })
                @Html.ValidationMessageFor(c => c.TarjetaMaestro)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaCabal)
                @Html.EditorFor(c => c.TarjetaCabal, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);" } })
                @Html.ValidationMessageFor(c => c.TarjetaCabal)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TotalTarjetas)
                @Html.EditorFor(c => c.TotalTarjetas, "Currency", new { htmlAttributes = new { @class = "form-control js-formatearvalor", onkeyup = "ValidarPunto(this);" } })
                @Html.ValidationMessageFor(c => c.TotalTarjetas)
            </div>

        </div>

    </div>


    <div class="row">
        <div class="col-sm-12">

            @Html.AntiForgeryToken()
            @Html.HiddenFor(c => c.ID)
            <button type="submit" id ="vtaminsubmit"class="btn btn-primary">Guardar</button>
            <button type="button" class="btn btn-danger" value="Cancelar" onclick="location.href='@Url.Action("Index", "VentaMinorista")';">Cancelar</button>

        </div>
    </div>


}

@section scripts
{

    @*@Scripts.Render("~/bundles/jqueryval")*@

    <script>

        $(document).ready(function () {


            if (@Model.ID != 0) {

                if ("@Model.TipoFactura" == "A") {
                    $("#TipoFactura option:selected").val("A");
                }
                else if("@Model.TipoFactura" == "B") {
                    $("#TipoFactura option:selected").val("B");
                }
                
            }


            $("#vtaminsubmit").click(function (e) {

                e.preventDefault();

                bootbox.confirm("¿Estas seguro de concretar la venta?", function (result) {

                    if (result) {

                        //var importeVentaTotal = $("#ImporteVentaTotal").val();
                        //importeVentaTotal = FormatearValorMonetario(importeVentaTotal);
                        //$("#ImporteVentaTotal").val(importeVentaTotal);

                        var importeInformeZ = $("#ImporteInformeZ").val();
                        importeInformeZ = FormatearValorMonetario(importeInformeZ);
                        $("#ImporteInformeZ").val(importeInformeZ);

                        //var promedio = $("#Promedio").val();
                        //promedio = FormatearValorMonetario(promedio);
                        //$("#Promedio").val(promedio);

                        var importeIva = $("#ImporteIva").val();
                        importeIva = FormatearValorMonetario(importeIva);
                        $("#ImporteIva").val(importeIva);

                        var tarjetaVisa = $("#TarjetaVisa").val();
                        tarjetaVisa = FormatearValorMonetario(tarjetaVisa);
                        $("#TarjetaVisa").val(tarjetaVisa);

                        var tarjetaVisaDeb = $("#TarjetaVisaDeb").val();
                        tarjetaVisaDeb = FormatearValorMonetario(tarjetaVisaDeb);
                        $("#TarjetaVisaDeb").val(tarjetaVisaDeb);

                        var tarjetaMaster = $("#TarjetaMaster").val();
                        tarjetaMaster = FormatearValorMonetario(tarjetaMaster);
                        $("#TarjetaMaster").val(tarjetaMaster);

                        var tarjetaMaestro = $("#TarjetaMaestro").val();
                        tarjetaMaestro = FormatearValorMonetario(tarjetaMaestro);
                        $("#TarjetaMaestro").val(tarjetaMaestro);

                        var tarjetaCabal = $("#TarjetaCabal").val();
                        tarjetaCabal = FormatearValorMonetario(tarjetaCabal);
                        $("#TarjetaCabal").val(tarjetaCabal);

                        var totalTarjetas = $("#TotalTarjetas").val();
                        totalTarjetas = FormatearValorMonetario(totalTarjetas);
                        $("#TotalTarjetas").val(totalTarjetas);


                        $("#vtaminform").submit();

                    }

                });

                
            });

            $("#TipoFactura").on("change", function () {

                var importeInformeZ = DeFormatearValor($("#ImporteInformeZ").val());
                var tipoFactura = $("#TipoFactura option:selected").val();

                if (importeInformeZ != 0) {

                    if (tipoFactura == "A") {
                        var operacion = importeInformeZ / 1.21;
                        $("#ImporteIva").val(FormatearValor(operacion));
                    }
                    else if (tipoFactura == "B") {
                        var operacion = importeInformeZ * 0.21;
                        $("#ImporteIva").val(FormatearValor(operacion));
                    }

                }
                else {
                    bootbox.alert("Por favor llenar el campo de Importe Informe Z");
                    $("#TipoFactura option:selected").removeAttr("selected");
                }

            });

            $(".js-formatearvalor").on("blur", function () {

                var valor = ValorANumero($(this).val());

                $(this).val(FormatearValor(valor));
            });

        });

        function ValidarPunto(textbox) {

            var word = ["."];

            for (i = 0; i < word.length; i++) {
                if (textbox.value.indexOf(word[i]) >= 0) {
                    $("[data-valmsg-for=" + textbox.id).text("Para valores decimales por favor usar la coma.").css("color", "red");
                }
                else {
                    $("[data-valmsg-for=" + textbox.id).text("");
                }
            }

        }

    </script>

}
