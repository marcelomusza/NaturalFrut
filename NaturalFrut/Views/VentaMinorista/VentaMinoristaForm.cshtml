@model NaturalFrut.App_BLL.ViewModels.VentaMinoristaViewModel
@{
    ViewBag.Title = "CargarVenta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2>Ingresar Venta</h2>

@using (Html.BeginForm("GuardarVentaMinorista", "VentaMinorista"))
{

    <div class="row">
        @Html.ValidationSummary(true, "Por favor revise los siguientes errores:")
    </div>

    <div class="row">

        <!--Agrupamos campos de la columna izquierda-->
        <div class="col-sm-6">

            <div class="form-group">
                <label>N° Venta</label>
                @Html.TextBoxFor(c => c.ID, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(c => c.ID)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.Fecha)
                @Html.TextBoxFor(c => c.Fecha, new { id = "Fecha", @class = "form-control", @Value = DateTime.Now.ToString("dd/MM/yyyy HH:mm"), @readonly = "readonly" })
                @Html.ValidationMessageFor(c => c.Fecha)
            </div>

            <div class="form-group">
                <label>IVA</label>
                @Html.TextBoxFor(c => c.Iva, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.Iva)
            </div>

            <div class="form-group">
                <label>Importe Venta Total</label>
                @Html.TextBoxFor(c => c.ImporteVentaTotal, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.ImporteVentaTotal)
            </div>

            <div class="form-group">
                <label>Importe Informe Z</label>
                @Html.TextBoxFor(c => c.ImporteInformeZ, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.ImporteInformeZ)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.CantidadPersonas)
                @Html.TextBoxFor(c => c.CantidadPersonas, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.CantidadPersonas)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.Promedio)
                @Html.TextBoxFor(c => c.Promedio, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.Promedio)
            </div>

            <div class="form-group">
                <label>Importe IVA Z</label>
                @Html.TextBoxFor(c => c.ImporteIva, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.ImporteIva)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.PrimerNumeroTicket)
                @Html.TextBoxFor(c => c.PrimerNumeroTicket, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.PrimerNumeroTicket)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.UltimoNumeroTicket)
                @Html.TextBoxFor(c => c.UltimoNumeroTicket, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.UltimoNumeroTicket)
            </div>
       </div>


        <!--Agrupamos campos de la columna derecha-->
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(c => c.NumFactura)
                @Html.TextBoxFor(c => c.NumFactura, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.NumFactura)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.RazonSocial)
                @Html.TextBoxFor(c => c.RazonSocial, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.RazonSocial)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TipoFactura)
                @Html.TextBoxFor(c => c.TipoFactura, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.TipoFactura)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaVisa)
                @Html.TextBoxFor(c => c.TarjetaVisa, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.TarjetaVisa)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaVisaDeb)
                @Html.TextBoxFor(c => c.TarjetaVisaDeb, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.TarjetaVisaDeb)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaMaster)
                @Html.TextBoxFor(c => c.TarjetaMaster, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.TarjetaMaster)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaMaestro)
                @Html.TextBoxFor(c => c.TarjetaMaestro, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.TarjetaMaestro)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TarjetaCabal)
                @Html.TextBoxFor(c => c.TarjetaCabal, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.TarjetaCabal)
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.TotalTarjetas)
                @Html.TextBoxFor(c => c.TotalTarjetas, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.TotalTarjetas)
            </div>

        </div>

    </div>


    <div class="row">
        <div class="col-sm-12">

            @Html.AntiForgeryToken()
            @Html.HiddenFor(c => c.ID)
            <button type="submit" class="btn btn-primary">Guardar</button>
            <button type="button" class="btn btn-danger" value="Cancelar" onclick="location.href='@Url.Action("Index", "Home")';">Cancelar</button>

        </div>
    </div>


}






@section scripts
{
    <script>

        var NuevoClienteModal = function (clienteID) {

            var url = "/VentaMayorista/NuevoCliente?ID=" + clienteID;

            $("#clienteModalBody").load(url, function () {
                $("#clienteModal").modal("show");

            })

        }

        var NuevoVendedorModal = function (vendedorID) {

            var url = "/VentaMayorista/NuevoVendedor?ID=" + vendedorID;

            $("#vendedorModalBody").load(url, function () {
                $("#vendedorModal").modal("show");

            })

        }

    </script>

    <script>

        $(document).ready(function () {


            var vm = {};

            var clientes = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Nombre'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: {
                    url: '/api/clientes?query=%QUERY',
                    wildcard: '%QUERY',
                    cache: false
                }
            });

            $('#cliente').typeahead({
                minLength: 3,
                highlight: true,
                hint: true,
                limit: Infinity
            }, {
                    name: 'cliente',
                    display: 'Nombre',
                    source: clientes
                }).on("typeahead:select", function (e, cliente) {
                    vm.clienteId = cliente.id;
                });


            var table = $("#clientes").DataTable({

                "language": {
                    "url": "http://cdn.datatables.net/plug-ins/1.10.16/i18n/Spanish.json"
                },

                ajax: {

                    url: "/api/clientes",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Nombre"
                    },
                    {
                        data: "ID",
                        render: function (data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + "><img title='Borrar' src='/Content/Images/DeleteIcon.png'/></button>" +
                                "<button class='btn-link js-edit' data-customer-id=" + data + "><img title='Editar' src='/Content/Images/EditIcon.png'/></button>";
                        }
                    }
                ]
            });

            $("#clientes").on("click", ".js-delete", function () {

                var button = $(this);

                bootbox.confirm("¿Estas seguro de realizar esta acción?", function (result) {

                    if (result) {
                        $.ajax({
                            url: "/api/clientes/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {

                                toastr.success("Cliente eliminado satisfactoriamente");

                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }

                });


            });

            $("#clientes").on("click", ".js-edit", function () {

                var button = $(this);

                location.href = "EditarCliente/" + button.attr("data-customer-id");

            });

        });

    </script>

}
